#! /bin/sh
#
###########################################################################
#
#              Copyright (C) Autelan Technology
#
#This software file is owned and distributed by Autelan Technology 
#
############################################################################
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
#ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
#WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
#DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR 
#ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
#(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
#LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON 
#ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
#(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
#SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##############################################################################
#
# ntp_init
#
# CREATOR:
# autelan.software.zhouyanmei. team
# 
# DESCRIPTION: 
#     Starts, stops ntp service
#############################################################################

### BEGIN INIT INFO
# Provides:        ntp
# Required-Start:  $network $remote_fs $syslog
# Required-Stop:   $network $remote_fs $syslog
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: Start NTP daemon
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin

. /lib/lsb/init-functions

NAME=ntp
DAEMON=/usr/sbin/ntpd
PIDFILE=/var/run/ntpd.pid
CONFIG=/etc/ntp.conf
CONFXML=/opt/services/option/ntp_option
CONFXMLT=/opt/www/htdocs/ntp.xml
CONFBK=/opt/services/conf/ntp_conf.conf

test -x $DAEMON || exit 5

if [ -r /etc/default/$NAME ]; then
        . /etc/default/$NAME
fi

if [ -e /etc/ntp.conf.dhcp ]; then
        NTPD_OPTS="$NTPD_OPTS -c /etc/ntp.conf.dhcp"
fi

RUNASUSER=ntp
UGID=$(getent passwd $RUNASUSER | cut -f 3,4 -d:) || true

if [ ! -e $CONFXML ]
  then
    sudo cp $CONFXMLT $CONFXML
    sudo chmod 666 $CONFXML
  fi
  
  if [ ! -e $CONFBK ]
  then
    sudo cp $CONFIG $CONFBK
    sudo chmod 666 $CONFBK
  fi
  
cron_start(){
	cron_num=`sudo crontab -l|grep crontimentp |wc -l`
	if [ "$cron_num"x = "0"x ];then
	   sudo /usr/bin/cronntp.sh	
	fi
}   
             
case $1 in
        start|"")
                log_daemon_msg "Starting NTP server" "ntpd"
                if [ -z "$UGID" ]; then
                        log_failure_msg "user \"$RUNASUSER\" does not exist"
                        exit 1
                fi 
                cron_start       
                start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE --startas $DAEMON -- -p $PIDFILE  $NTPD_OPTS -c $CONFBK        
                log_end_msg $?
                ;;
        stop)
                log_daemon_msg "Stopping NTP server" "ntpd"                             
                start-stop-daemon --stop  --signal 9 --quiet --oknodo --pidfile $PIDFILE
                log_end_msg $?
                rm -f $PIDFILE
                ;;
        restart|force-reload)
                $0 stop && sleep 2 && $0 start
                ;;
        snmprestart)
                $0 stop && sleep 2 && $0 start
                ;;
        try-restart)
                if $0 status >/dev/null; then
                        $0 restart
                else
                        exit 0
                fi
                ;;
        reload)
                exit 3
                ;;
        status)
                pidofproc -p $PIDFILE $DAEMON >/dev/null
                status=$?
                if [ $status -eq 0 ]; then
                        log_success_msg "NTP server is running."
                else
                        log_failure_msg "NTP server is not running."
                fi
                exit $status
                ;;
        *)
                echo "Usage: $0 {start|stop|restart|try-restart|force-reload|status|""}"
                exit 2
                ;;
esac