/*
 * Generated by asn1c-0.9.23 (http://lionet.info/asn1c)
 * From ASN.1 module "RUA-IEs"
 * 	found in "RUA-IEs.asn"
 */

#ifndef	_IntraDomainNasNodeSelector_H_
#define	_IntraDomainNasNodeSelector_H_


#include <asn_application.h>

/* Including external dependencies */
#include "Gsm-map-IDNNS.h"
#include "Ansi-41-IDNNS.h"
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>
#include <BIT_STRING.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum version_PR {
	version_PR_NOTHING,	/* No components present */
	version_PR_release99,
	version_PR_later
} version_PR;
typedef enum cn_Type_PR {
	cn_Type_PR_NOTHING,	/* No components present */
	cn_Type_PR_gsm_Map_IDNNS,
	cn_Type_PR_ansi_41_IDNNS
} cn_Type_PR;


typedef struct release99 {
				struct cn_Type {
					cn_Type_PR present;
					union IntraDomainNasNodeSelector__version__release99__cn_Type_u {
						Gsm_map_IDNNS_t	 gsm_Map_IDNNS;
						Ansi_41_IDNNS_t	 ansi_41_IDNNS;
					} choice;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} cn_Type;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
}Release99_t;

typedef struct version{
		version_PR present;
		union IntraDomainNasNodeSelector__version_u {
			Release99_t release99;
			struct later {
				BIT_STRING_t	 futurecoding;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} later;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
}Version_t;

/* IntraDomainNasNodeSelector */
typedef struct IntraDomainNasNodeSelector {
	Version_t version;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} IntraDomainNasNodeSelector_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_IntraDomainNasNodeSelector;

#ifdef __cplusplus
}
#endif

#endif	/* _IntraDomainNasNodeSelector_H_ */
#include <asn_internal.h>
