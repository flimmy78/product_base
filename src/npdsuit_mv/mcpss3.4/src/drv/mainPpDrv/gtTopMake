###########################################
##                                       ##
##    Top Make file for CPSS drivers     ##
##                                       ##
###########################################

PROJ_NAME = mainPpDrv

include $(USER_BASE)/gtDefsTopMake.mk 


PROJECT_PATH =  $(BASE_PATH) \
		$(COMMON_PATH)\
		$(OS_INCLUDE)


ifeq (EXISTS,$(RTOS_ON_SIM))
  PROJECT_PATH += $(SIMULATION_PATH)
endif

include $(USER_BASE)/gtToolsTopMake.mk 


##############
## CPSS PP  ##
##############
ifeq (EXISTS, $(EX_FAMILY))
AD_CFLAGS += $(FD)EX_FAMILY
endif

ifeq (EXISTS, $(MX_FAMILY))
AD_CFLAGS += $(FD)MX_FAMILY
endif

ifeq (EXISTS, $(CHX_FAMILY))
AD_CFLAGS += $(FD)CHX_FAMILY
endif

ifeq (EXISTS, $(CH3_FAMILY))
AD_CFLAGS += $(FD)CH3_FAMILY
endif

ifeq (EXISTS, $(SAL_FAMILY))
AD_CFLAGS += $(FD)SAL_FAMILY
endif

ifeq (EXISTS, $(TG_FAMILY))
AD_CFLAGS += $(FD)TG_FAMILY
endif

ifeq (EXISTS, $(TD_FAMILY))
AD_CFLAGS += $(FD)TD_FAMILY
endif

ifeq (EXISTS, $(PM_FAMILY))
AD_CFLAGS += $(FD)EXMXPM_FAMILY
endif

########################################################
## Management interface bus : PCI or SMI or I2C or PEX## 
########################################################
ifeq (EXISTS, $(GT_PCI))
AD_CFLAGS += $(FD)GT_PCI
endif
ifeq (EXISTS, $(GT_SMI))
AD_CFLAGS += $(FD)GT_SMI
endif
ifeq (EXISTS, $(GT_I2C))
AD_CFLAGS += $(FD)GT_I2C
endif
ifeq (EXISTS, $(GT_PEX))
AD_CFLAGS += $(FD)GT_PEX
endif
#################
## CPSS driver ##
#################
ifeq (EXISTS, $(EXDXMX_DRIVER))
AD_CFLAGS += $(FD)INCL_EXDXMX_DRIVER
endif

ifeq (EXISTS, $(XCAT_DRV))
###for now exist mii bsp api's implemented for xcat only
###need this define to avoid linkage problems
AD_CFLAGS += $(FD)XCAT_DRV
endif

##################################
##      Double Word Flag        ##
## Used for PUMA's LPM with PQ3 ##
##################################
ifeq ($(CPU), PPC85XX)
ifeq (VXWORKS,$(OS_RUN))
ifeq (EXISTS, $(PM_FAMILY))
AD_CFLAGS += -DUSE_PUMA_LPM_DWORD
endif
endif
endif

############
## INLINE ##
############
ifeq (A1, $(DRAGONITE_TYPE))
AD_CFLAGS += $(FD)DRAGONITE_TYPE_A1
PROJECT_PATH += $(EXT_DRV_SIM_DRAGONITE_PATH)
endif

#################
## DEBUG FLAGS ##
#################
ifdef PRESTERA_DEBUG
CDEBUG = $(FD)PRESTERA_DEBUG
endif

ifeq (DEBUG_ON, $(CPSS_DEBUG))
ifeq (DEBUG_ON, $(CPSS_DEBUG_VLAN))
CDEBUG += $(FD)GT_VLAN_DEBUG
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_FDB))
CDEBUG += $(FD)GT_MAC_DEBUG
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_TRUNK))
CDEBUG += $(FD)GT_TRUNK_DEBUG
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_FDB_DUMP))
CDEBUG += $(FD)GT_MAC_DEBUG_DUMP
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_IPV4))
CDEBUG += $(FD)GT_DEBUG_IPV4
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_IPV6))
CDEBUG += $(FD)GT_DEBUG_IPV6
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_PCL))
CDEBUG += -DGT_DEBUG_PCL
endif
ifeq (DEBUG_ON, $(CPSS_DEBUG_TCM))
CDEBUG += $(FD)GT_DEBUG_TCM
endif
endif


############
## CFLAGS ##
############
CFLAGS += $(CFLAGS1) $(CFLAGS2) $(CFLAGS_OPT) $(OS_DEFINE) $(CPU_FLAGS) $(LFLAGS) $(AD_CFLAGS) $(CDEBUG)
	
include $(USER_BASE)/gtTargetsTopMake.mk 

ifeq (visual,$(TOOL))
  #for visual use 'lib_full' instead of 'lib', use 'elf' instead 'onelib'
  ##full: build_dir dep compile lib_full elf
  full: build_dir dep compile lib_full elf
else
  full: build_dir dep compile lib onelib
endif

