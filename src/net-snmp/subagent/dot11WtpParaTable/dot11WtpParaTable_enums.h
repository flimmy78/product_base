/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-enums.m2c,v 1.3 2004/05/18 17:44:32 rstory Exp $
 *
 * $Id:$
 */
#ifndef DOT11WTPPARATABLE_ENUMS_H
#define DOT11WTPPARATABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table dot11WtpParaTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * wtpRemoteRestartFun (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPREMOTERESTARTFUN_ENUMS
#define WTPREMOTERESTARTFUN_ENUMS

#define WTPREMOTERESTARTFUN_UNUSED  0 
#define WTPREMOTERESTARTFUN_USED  1 


#endif /* WTPREMOTERESTARTFUN_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpRemoteRestartFun enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPREMOTERESTARTFUN_UNUSED  0 
#define INTERNAL_WTPREMOTERESTARTFUN_USED  1 

/*************************************************************
 * constants for enums for the MIB node
 * wtpWorkMode (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPWORKMODE_ENUMS
#define WTPWORKMODE_ENUMS

#define WTPWORKMODE_FAT_AP  1 
#define WTPWORKMODE_BRIDGE_MODE  2 
#define WTPWORKMODE_AP_AND_BRIGE  3 


#endif /* WTPWORKMODE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpWorkMode enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPWORKMODE_FAT_AP  1 
#define INTERNAL_WTPWORKMODE_BRIDGE_MODE  2 
#define INTERNAL_WTPWORKMODE_AP_AND_BRIGE  3 

/*************************************************************
 * constants for enums for the MIB node
 * wtpState (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPSTATE_ENUMS
#define WTPSTATE_ENUMS

#define WTPSTATE_JOIN  2 
#define WTPSTATE_CONFIGURE  3 
#define WTPSTATE_DATACHECK  4 
#define WTPSTATE_RUN  5 
#define WTPSTATE_QUIT  7 
#define WTPSTATE_IMAGEDATA  8 
#define WTPSTATE_BAK_RUN	9


#endif /* WTPSTATE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpState enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPSTATE_JOIN  2 
#define INTERNAL_WTPSTATE_CONFIGURE  3 
#define INTERNAL_WTPSTATE_DATACHECK  4 
#define INTERNAL_WTPSTATE_RUN  5 
#define INTERNAL_WTPSTATE_QUIT  7 
#define INTERNAL_WTPSTATE_IMAGEDATA  8
#define INTERNAL_WTPSTATE_BAK_RUN	 9

/*************************************************************
 * constants for enums for the MIB node
 * wtpDefenceDOSAttack (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPDEFENCEDOSATTACK_ENUMS
#define WTPDEFENCEDOSATTACK_ENUMS

#define WTPDEFENCEDOSATTACK_DISABLE  0 
#define WTPDEFENCEDOSATTACK_ENABLE  1 


#endif /* WTPDEFENCEDOSATTACK_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpDefenceDOSAttack enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPDEFENCEDOSATTACK_DISABLE  0 
#define INTERNAL_WTPDEFENCEDOSATTACK_ENABLE  1 

/*************************************************************
 * constants for enums for the MIB node
 * wtpIGMPSwitch (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPIGMPSWITCH_ENUMS
#define WTPIGMPSWITCH_ENUMS

#define WTPIGMPSWITCH_DISABLE  0 
#define WTPIGMPSWITCH_ENABLE  1 


#endif /* WTPIGMPSWITCH_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpIGMPSwitch enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPIGMPSWITCH_DISABLE  0 
#define INTERNAL_WTPIGMPSWITCH_ENABLE  1 

/*************************************************************
 * constants for enums for the MIB node
 * wtpBridgingWorkMode (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPBRIDGINGWORKMODE_ENUMS
#define WTPBRIDGINGWORKMODE_ENUMS

#define WTPBRIDGINGWORKMODE_NORMAL  1 
#define WTPBRIDGINGWORKMODE_BRIDGE  2 
#define WTPBRIDGINGWORKMODE_SEMIBRIDGE  3 


#endif /* WTPBRIDGINGWORKMODE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpBridgingWorkMode enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPBRIDGINGWORKMODE_NORMAL  1 
#define INTERNAL_WTPBRIDGINGWORKMODE_BRIDGE  2 
#define INTERNAL_WTPBRIDGINGWORKMODE_SEMIBRIDGE  3 

/*************************************************************
 * constants for enums for the MIB node
 * wtpCurrAPMode (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPCURRAPMODE_ENUMS
#define WTPCURRAPMODE_ENUMS

#define WTPCURRAPMODE_NORMAL  1 
#define WTPCURRAPMODE_MONITOR  2 
#define WTPCURRAPMODE_SEMIMONITOR  3 


#endif /* WTPCURRAPMODE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpCurrAPMode enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPCURRAPMODE_NORMAL  1 
#define INTERNAL_WTPCURRAPMODE_MONITOR  2 
#define INTERNAL_WTPCURRAPMODE_SEMIMONITOR  3 

/*************************************************************
 * constants for enums for the MIB node
 * wtpSupport11B (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPSUPPORT11B_ENUMS
#define WTPSUPPORT11B_ENUMS

#define WTPSUPPORT11B_YES  1 
#define WTPSUPPORT11B_NO  2 


#endif /* WTPSUPPORT11B_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpSupport11B enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPSUPPORT11B_YES  1 
#define INTERNAL_WTPSUPPORT11B_NO  2 

/*************************************************************
 * constants for enums for the MIB node
 * wtpSupport11G (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPSUPPORT11G_ENUMS
#define WTPSUPPORT11G_ENUMS

#define WTPSUPPORT11G_YES  1 
#define WTPSUPPORT11G_NO  2 


#endif /* WTPSUPPORT11G_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpSupport11G enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPSUPPORT11G_YES  1 
#define INTERNAL_WTPSUPPORT11G_NO  2 



#ifdef __cplusplus
}
#endif

#endif /* DOT11WTPPARATABLE_ENUMS_H */
