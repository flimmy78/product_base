/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-enums.m2c,v 1.3 2004/05/18 17:44:32 rstory Exp $
 *
 * $Id:$
 */
#ifndef DOT11WTPWLANSTATSTABLE_ENUMS_H
#define DOT11WTPWLANSTATSTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table dot11WtpWlanStatsTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * wtpEAPAuthenSupport (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPEAPAUTHENSUPPORT_ENUMS
#define WTPEAPAUTHENSUPPORT_ENUMS

#define WTPEAPAUTHENSUPPORT_ENABLE_EAP_AUTHENTICATION  0 
#define WTPEAPAUTHENSUPPORT_DISABLE_EAP_AUTHENTICATION  1 
#define WTPEAPAUTHENSUPPORT_NOT_SUPPORTING_EAP_AUTHENTICATION  2 


#endif /* WTPEAPAUTHENSUPPORT_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpEAPAuthenSupport enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPEAPAUTHENSUPPORT_ENABLE_EAP_AUTHENTICATION  0 
#define INTERNAL_WTPEAPAUTHENSUPPORT_DISABLE_EAP_AUTHENTICATION  1 
#define INTERNAL_WTPEAPAUTHENSUPPORT_NOT_SUPPORTING_EAP_AUTHENTICATION  2 

/*************************************************************
 * constants for enums for the MIB node
 * wtpLoadBalance (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 


#endif /* TRUTHVALUE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpLoadBalance enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPLOADBALANCE_TRUE  1 
#define INTERNAL_WTPLOADBALANCE_FALSE  2 

/*************************************************************
 * constants for enums for the MIB node
 * wtpSsidBroadcast (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 


#endif /* TRUTHVALUE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpSsidBroadcast enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPSSIDBROADCAST_TRUE  1 
#define INTERNAL_WTPSSIDBROADCAST_FALSE  2 

/*************************************************************
 * constants for enums for the MIB node
 * wtpConfSecurMech (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPCONFSECURMECH_ENUMS
#define WTPCONFSECURMECH_ENUMS

#define WTPCONFSECURMECH_OPENSYSTEM  0 
#define WTPCONFSECURMECH_SHAREDKEY  1 
#define WTPCONFSECURMECH_DOT11X  2 
#define WTPCONFSECURMECH_WPA_P  3 
#define WTPCONFSECURMECH_WPA2_P  4 
#define WTPCONFSECURMECH_WPA_E  5 
#define WTPCONFSECURMECH_WPA2_E  6 
#define WTPCONFSECURMECH_MD5  7 
#define WTPCONFSECURMECH_WAPI_PSK  8 
#define WTPCONFSECURMECH_WAPI_AUTH  9 


#endif /* WTPCONFSECURMECH_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpConfSecurMech enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPCONFSECURMECH_OPENSYSTEM  0 
#define INTERNAL_WTPCONFSECURMECH_SHAREDKEY  1 
#define INTERNAL_WTPCONFSECURMECH_DOT11X  2 
#define INTERNAL_WTPCONFSECURMECH_WPA_P  3 
#define INTERNAL_WTPCONFSECURMECH_WPA2_P  4 
#define INTERNAL_WTPCONFSECURMECH_WPA_E  5 
#define INTERNAL_WTPCONFSECURMECH_WPA2_E  6 
#define INTERNAL_WTPCONFSECURMECH_MD5  7 
#define INTERNAL_WTPCONFSECURMECH_WAPI_PSK  8 
#define INTERNAL_WTPCONFSECURMECH_WAPI_AUTH  9 

/*************************************************************
 * constants for enums for the MIB node
 * wtpL2Insulate (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPL2INSULATE_ENUMS
#define WTPL2INSULATE_ENUMS

#define WTPL2INSULATE_CLOSE  0 
#define WTPL2INSULATE_OPEN  1 


#endif /* WTPL2INSULATE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpL2Insulate enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPL2INSULATE_CLOSE  0 
#define INTERNAL_WTPL2INSULATE_OPEN  1 



#ifdef __cplusplus
}
#endif

#endif /* DOT11WTPWLANSTATSTABLE_ENUMS_H */
