/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.32.2.3 $ of : mfd-top.m2c,v $
 *
 * $Id:$
 */
#ifndef DOT11WTPDATAPKTSTABLE_H
#define DOT11WTPDATAPKTSTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @defgroup misc misc: Miscelaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_require(DOT11-WTP-MIB/dot11WtpDataPktsTable/dot11WtpDataPktsTable_interface);
config_require(DOT11-WTP-MIB/dot11WtpDataPktsTable/dot11WtpDataPktsTable_data_access);
config_require(DOT11-WTP-MIB/dot11WtpDataPktsTable/dot11WtpDataPktsTable_data_get);
config_require(DOT11-WTP-MIB/dot11WtpDataPktsTable/dot11WtpDataPktsTable_data_set);
    /* *INDENT-ON*  */

/* OID and column number definitions for  */
#include "dot11WtpDataPktsTable_oids.h"

/* enum definions */
#include "dot11WtpDataPktsTable_enums.h"
#include "ws_dbus_list_interface.h"

/* *********************************************************************
 * function declarations
 */
void init_dot11WtpDataPktsTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table dot11WtpDataPktsTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * dot11WtpDataPktsTable is subid 3 of wtpStats.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.31656.6.1.1.2.3, length: 12
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review dot11WtpDataPktsTable registration context.
     */
typedef netsnmp_data_list * dot11WtpDataPktsTable_registration_ptr;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review dot11WtpDataPktsTable data context structure.
 * This structure is used to represent the data for dot11WtpDataPktsTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * dot11WtpDataPktsTable.
 */
typedef struct dot11WtpDataPktsTable_data_s {
    dbus_parameter parameter;
        /*
         * wtpWirelessMacRxAllByte(1)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   unsigned long long   wtpWirelessMacRxAllByte;
    
        /*
         * wtpWirelessMacTxAllByte(2)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   unsigned long long   wtpWirelessMacTxAllByte;
    
        /*
         * wtpWirelessMacRxPack(3)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWirelessMacRxPack;
    
        /*
         * wtpWirelessMacRxErrPack(4)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWirelessMacRxErrPack;
    
        /*
         * wtpWiredMacRxAllByte(5)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   unsigned long long   wtpWiredMacRxAllByte;
    
        /*
         * wtpWiredMacTxAllByte(6)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   unsigned long long   wtpWiredMacTxAllByte;
    
        /*
         * wtpWiredMacRxErrPack(7)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWiredMacRxErrPack;
    
        /*
         * wtpWirelessMacTxDropPkts(8)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWirelessMacTxDropPkts;
    
        /*
         * wtpWirelessMacTxPack(9)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWirelessMacTxPack;
    
        /*
         * wtpWirelessMacTxErrPack(10)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWirelessMacTxErrPack;
    
        /*
         * wtpWirelessMacRxRightPack(11)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWirelessMacRxRightPack;
    
        /*
         * wtpWirelessMacTxRightPack(12)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWirelessMacTxRightPack;
    
        /*
         * wtpWiredMacRxPack(13)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWiredMacRxPack;
    
        /*
         * wtpWiredMacRxRightPack(14)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWiredMacRxRightPack;
    
        /*
         * wtpWiredMacTxPack(15)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWiredMacTxPack;
    
        /*
         * wtpWiredMacTxErrPack(16)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWiredMacTxErrPack;
    
        /*
         * wtpWiredMacTxRightPack(17)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWiredMacTxRightPack;
    
        /*
         * wtpWirelessradioRecvBytes(18)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wtpWirelessradioRecvBytes;
    
        /*
         * wtpWirelesscoreRecvBytes(19)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wtpWirelesscoreRecvBytes;
    
        /*
         * wtpWirelessRxFlowByte(20)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wtpWirelessRxFlowByte;
    
        /*
         * wtpWirelessTxFlowByte(21)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wtpWirelessTxFlowByte;
    
} dot11WtpDataPktsTable_data;


/*
 * TODO:120:r: |-> Review dot11WtpDataPktsTable mib index.
 * This structure is used to represent the index for dot11WtpDataPktsTable.
 */
typedef struct dot11WtpDataPktsTable_mib_index_s {

        /*
         * wtpMacAddr(1)/Dot11BaseWtpIdTC/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
        /** 128 - 0(other indexes) - oid length(14) = 113 */
   char   wtpMacAddr[113];
   size_t      wtpMacAddr_len;


} dot11WtpDataPktsTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review dot11WtpDataPktsTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     *
     * BE VERY CAREFUL TO TAKE INTO ACCOUNT THE MAXIMUM
     * POSSIBLE LENGHT FOR EVERY VARIABLE LENGTH INDEX!
     * Guessing 128 - col/entry(2)  - oid len(12)
*/
#define MAX_dot11WtpDataPktsTable_IDX_LEN     114


/* *********************************************************************
 * TODO:130:o: |-> Review dot11WtpDataPktsTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * dot11WtpDataPktsTable_rowreq_ctx pointer.
 */
typedef struct dot11WtpDataPktsTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_dot11WtpDataPktsTable_IDX_LEN];
    
    dot11WtpDataPktsTable_mib_index        tbl_idx;
    
    dot11WtpDataPktsTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * implementor's context pointer (provided during registration)
     */
    dot11WtpDataPktsTable_registration_ptr dot11WtpDataPktsTable_reg;

    /*
     * TODO:131:o: |   |-> Add useful data to dot11WtpDataPktsTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *dot11WtpDataPktsTable_data_list;

} dot11WtpDataPktsTable_rowreq_ctx;

typedef struct dot11WtpDataPktsTable_ref_rowreq_ctx_s {
    dot11WtpDataPktsTable_rowreq_ctx *rowreq_ctx;
} dot11WtpDataPktsTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int dot11WtpDataPktsTable_pre_request(dot11WtpDataPktsTable_registration_ptr user_context);
    int dot11WtpDataPktsTable_post_request(dot11WtpDataPktsTable_registration_ptr user_context);


extern oid dot11WtpDataPktsTable_oid[];
extern int dot11WtpDataPktsTable_oid_size;


#include "dot11WtpDataPktsTable_interface.h"
#include "dot11WtpDataPktsTable_data_access.h"
#include "dot11WtpDataPktsTable_data_get.h"
#include "dot11WtpDataPktsTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* DOT11WTPDATAPKTSTABLE_H */
