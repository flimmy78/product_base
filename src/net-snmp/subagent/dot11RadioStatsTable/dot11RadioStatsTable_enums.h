/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-enums.m2c,v 1.3 2004/05/18 17:44:32 rstory Exp $
 *
 * $Id:$
 */
#ifndef DOT11RADIOSTATSTABLE_ENUMS_H
#define DOT11RADIOSTATSTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table dot11RadioStatsTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * wtpPowerManage (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPPOWERMANAGE_ENUMS
#define WTPPOWERMANAGE_ENUMS

#define WTPPOWERMANAGE_DISABLE  0 
#define WTPPOWERMANAGE_ENABLE  1 


#endif /* WTPPOWERMANAGE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpPowerManage enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPPOWERMANAGE_DISABLE  0 
#define INTERNAL_WTPPOWERMANAGE_ENABLE  1 

/*************************************************************
 * constants for enums for the MIB node
 * wtpProtoMode (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPPROTOMODE_ENUMS
#define WTPPROTOMODE_ENUMS

#define WTPPROTOMODE_A      1 
#define WTPPROTOMODE_B      2 
#define WTPPROTOMODE_G      4
#define WTPPROTOMODE_BG     6
#define WTPPROTOMODE_AN     8 
#define WTPPROTOMODE_AAN    9 
#define WTPPROTOMODE_GN     16
#define WTPPROTOMODE_GGN    20
#define WTPPROTOMODE_BGGN   22

#endif /* WTPPROTOMODE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpProtoMode enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPPROTOMODE_A         1 
#define INTERNAL_WTPPROTOMODE_B         2 
#define INTERNAL_WTPPROTOMODE_G         4 
#define INTERNAL_WTPPROTOMODE_BG        6
#define INTERNAL_WTPPROTOMODE_AN        8 
#define INTERNAL_WTPPROTOMODE_AAN       9 
#define INTERNAL_WTPPROTOMODE_GN        16
#define INTERNAL_WTPPROTOMODE_GGN       20
#define INTERNAL_WTPPROTOMODE_BGGN      22

/*************************************************************
 * constants for enums for the MIB node
 * wtpRTSCTSEnable (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WTPRTSCTSENABLE_ENUMS
#define WTPRTSCTSENABLE_ENUMS

#define WTPRTSCTSENABLE_DISABLE  0 
#define WTPRTSCTSENABLE_ENABLE  1 


#endif /* WTPRTSCTSENABLE_ENUMS */

    /*
     * TODO:140:o: Define interal representation of wtpRTSCTSEnable enums.
     * (used for value mapping; see notes at top of file)
     */
#define INTERNAL_WTPRTSCTSENABLE_DISABLE  0 
#define INTERNAL_WTPRTSCTSENABLE_ENABLE  1 



#ifdef __cplusplus
}
#endif

#endif /* DOT11RADIOSTATSTABLE_ENUMS_H */
