/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.32.2.3 $ of : mfd-top.m2c,v $
 *
 * $Id:$
 */
#ifndef DOT11WTPTEMINALTABLE_H
#define DOT11WTPTEMINALTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @defgroup misc misc: Miscelaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_require(DOT11-WTP-MIB/dot11WtpTeminalTable/dot11WtpTeminalTable_interface);
config_require(DOT11-WTP-MIB/dot11WtpTeminalTable/dot11WtpTeminalTable_data_access);
config_require(DOT11-WTP-MIB/dot11WtpTeminalTable/dot11WtpTeminalTable_data_get);
config_require(DOT11-WTP-MIB/dot11WtpTeminalTable/dot11WtpTeminalTable_data_set);
    /* *INDENT-ON*  */

/* OID and column number definitions for  */
#include "dot11WtpTeminalTable_oids.h"

/* enum definions */
#include "dot11WtpTeminalTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_dot11WtpTeminalTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table dot11WtpTeminalTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * dot11WtpTeminalTable is subid 1 of wlanPortal.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.31656.6.1.1.17.1, length: 12
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review dot11WtpTeminalTable registration context.
     */
typedef netsnmp_data_list * dot11WtpTeminalTable_registration_ptr;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review dot11WtpTeminalTable data context structure.
 * This structure is used to represent the data for dot11WtpTeminalTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * dot11WtpTeminalTable.
 */
typedef struct dot11WtpTeminalTable_data_s {
    
        /*
         * portalCurusernum(1)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   portalCurusernum;
    
        /*
         * portalErrLogoffnum(2)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   portalErrLogoffnum;
    
        /*
         * portalReqnum(3)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   portalReqnum;
    
        /*
         * portalReqsuccnum(4)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   portalReqsuccnum;
    
        /*
         * portalReqfailnum(5)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   portalReqfailnum;
    
        /*
         * portalAllUserOnlineTime(6)/TICKS/ASN_TIMETICKS/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   portalAllUserOnlineTime;
    
        /*
         * macAuthCurusernum(7)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   macAuthCurusernum;
    
        /*
         * macAuthErrLogoffnum(8)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   macAuthErrLogoffnum;
    
        /*
         * macAuthReqnum(9)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   macAuthReqnum;
    
        /*
         * macAuthReqsuccnum(10)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   macAuthReqsuccnum;
    
        /*
         * macAuthReqfailnum(11)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   macAuthReqfailnum;
    
        /*
         * macAuthAllUserOnlineTime(12)/TICKS/ASN_TIMETICKS/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   macAuthAllUserOnlineTime;
    
} dot11WtpTeminalTable_data;


/*
 * TODO:120:r: |-> Review dot11WtpTeminalTable mib index.
 * This structure is used to represent the index for dot11WtpTeminalTable.
 */
typedef struct dot11WtpTeminalTable_mib_index_s {

        /*
         * wtpMacAddr(1)/DisplayString/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        /** 128 - 0(other indexes) - oid length(14) = 113 */
   char   wtpMacAddr[113];
   size_t      wtpMacAddr_len;


} dot11WtpTeminalTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review dot11WtpTeminalTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     *
     * BE VERY CAREFUL TO TAKE INTO ACCOUNT THE MAXIMUM
     * POSSIBLE LENGHT FOR EVERY VARIABLE LENGTH INDEX!
     * Guessing 128 - col/entry(2)  - oid len(12)
*/
#define MAX_dot11WtpTeminalTable_IDX_LEN     114


/* *********************************************************************
 * TODO:130:o: |-> Review dot11WtpTeminalTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * dot11WtpTeminalTable_rowreq_ctx pointer.
 */
typedef struct dot11WtpTeminalTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_dot11WtpTeminalTable_IDX_LEN];
    
    dot11WtpTeminalTable_mib_index        tbl_idx;
    
    dot11WtpTeminalTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * implementor's context pointer (provided during registration)
     */
    dot11WtpTeminalTable_registration_ptr dot11WtpTeminalTable_reg;

    /*
     * TODO:131:o: |   |-> Add useful data to dot11WtpTeminalTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *dot11WtpTeminalTable_data_list;

} dot11WtpTeminalTable_rowreq_ctx;

typedef struct dot11WtpTeminalTable_ref_rowreq_ctx_s {
    dot11WtpTeminalTable_rowreq_ctx *rowreq_ctx;
} dot11WtpTeminalTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int dot11WtpTeminalTable_pre_request(dot11WtpTeminalTable_registration_ptr user_context);
    int dot11WtpTeminalTable_post_request(dot11WtpTeminalTable_registration_ptr user_context);


extern oid dot11WtpTeminalTable_oid[];
extern int dot11WtpTeminalTable_oid_size;


#include "dot11WtpTeminalTable_interface.h"
#include "dot11WtpTeminalTable_data_access.h"
#include "dot11WtpTeminalTable_data_get.h"
#include "dot11WtpTeminalTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* DOT11WTPTEMINALTABLE_H */
