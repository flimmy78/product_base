/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.32.2.3 $ of : mfd-top.m2c,v $
 *
 * $Id:$
 */
#ifndef DOT11NEWWTPWIRELESSIFSTATSTABLE_H
#define DOT11NEWWTPWIRELESSIFSTATSTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @defgroup misc misc: Miscelaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_require(DOT11-WTP-MIB/dot11NewWtpWirelessIfstatsTable/dot11NewWtpWirelessIfstatsTable_interface);
config_require(DOT11-WTP-MIB/dot11NewWtpWirelessIfstatsTable/dot11NewWtpWirelessIfstatsTable_data_access);
config_require(DOT11-WTP-MIB/dot11NewWtpWirelessIfstatsTable/dot11NewWtpWirelessIfstatsTable_data_get);
config_require(DOT11-WTP-MIB/dot11NewWtpWirelessIfstatsTable/dot11NewWtpWirelessIfstatsTable_data_set);
    /* *INDENT-ON*  */

/* OID and column number definitions for  */
#include "dot11NewWtpWirelessIfstatsTable_oids.h"

/* enum definions */
#include "dot11NewWtpWirelessIfstatsTable_enums.h"
#include "ws_dbus_list_interface.h"

/* *********************************************************************
 * function declarations
 */
void init_dot11NewWtpWirelessIfstatsTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table dot11NewWtpWirelessIfstatsTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * dot11NewWtpWirelessIfstatsTable is subid 8 of wtpInterface.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.33050.6.1.1.3.8, length: 12
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review dot11NewWtpWirelessIfstatsTable registration context.
     */
typedef netsnmp_data_list * dot11NewWtpWirelessIfstatsTable_registration_ptr;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review dot11NewWtpWirelessIfstatsTable data context structure.
 * This structure is used to represent the data for dot11NewWtpWirelessIfstatsTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * dot11NewWtpWirelessIfstatsTable.
 */
typedef struct dot11NewWtpWirelessIfstatsTable_data_s {
    
        /*
         * NewwirelessIfAvgRxSignalStrength(2)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   NewwirelessIfAvgRxSignalStrength;
    
        /*
         * NewwirelessIfHighestRxSignalStrength(3)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   NewwirelessIfHighestRxSignalStrength;
    
        /*
         * NewwirelessIfLowestRxSignalStrength(4)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   NewwirelessIfLowestRxSignalStrength;
    
        /*
         * NewwirelessIfUpdownTimes(5)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfUpdownTimes;
    
        /*
         * NewwirelessIfChStatsNumStations(6)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   NewwirelessIfChStatsNumStations;
    
        /*
         * NewwirelessIfTxSignalPkts(7)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfTxSignalPkts;
    
        /*
         * NewwirelessIfRxSignalPkts(8)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfRxSignalPkts;
    
        /*
         * NewwirelessIfTxDataPkts(9)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfTxDataPkts;
    
        /*
         * NewwirelessIfRxDataPkts(10)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfRxDataPkts;
    
        /*
         * NewwirelessIfUplinkDataOctets(11)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   NewwirelessIfTxbytes;
    
        /*
         * NewwirelessIfDwlinkDataOctets(12)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   NewwirelessIfRxbytes;
    
        /*
         * NewwirelessIfChStatsDwlinkTotRetryPkts(13)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfChStatsDwlinkTotRetryPkts;
    
        /*
         * NewwirelessIfChStatsUplinkUniFrameCnt(14)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   unsigned long long    NewwirelessIfChStatsUplinkUniFrameCnt;
    
        /*
         * NewwirelessIfChStatsDwlinkUniFrameCnt(15)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
  unsigned long  long   NewwirelessIfChStatsDwlinkUniFrameCnt;
    
        /*
         * NewwirelessIfUpChStatsFrameNonUniFrameCnt(16)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfUpChStatsFrameNonUniFrameCnt;
    
        /*
         * NewwirelessIfDownChStatsFrameNonUniFrameCnt(17)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfDownChStatsFrameNonUniFrameCnt;
    
        /*
         * NewwirelessIfChStatsPhyErrPkts(18)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfChStatsPhyErrPkts;
    
        /*
         * NewwirelessIfChStatsMacFcsErrPkts(19)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfChStatsMacFcsErrPkts;
    
        /*
         * NewwirelessIfChStatsMacMicErrPkts(20)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfChStatsMacMicErrPkts;
    
        /*
         * NewwirelessIfChStatsMacDecryptErrPkts(21)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfChStatsMacDecryptErrPkts;
    
        /*
         * NewwirelessIfChStatsFrameErrorCnt(22)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfChStatsFrameErrorCnt;
    
        /*
         * NewwirelessIfChStatsFrameRetryCnt(23)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfChStatsFrameRetryCnt;
    
        /*
         * NewwirelessIfApChStatsFrameFragRate(24)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfApChStatsFrameFragRate;
    
        /*
         * NewwirelessIfRxMgmtFrameCnt(25)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfRxMgmtFrameCnt;
    
        /*
         * NewwirelessIfRxCtrlFrameCnt(26)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfRxCtrlFrameCnt;
    
        /*
         * NewwirelessIfRxDataFrameCnt(27)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfRxDataFrameCnt;
    
        /*
         * NewwirelessIfRxAuthenFrameCnt(28)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfRxAuthenFrameCnt;
    
        /*
         * NewwirelessIfRxAssociateFrameCnt(29)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfRxAssociateFrameCnt;
    
        /*
         * NewwirelessIfTxMgmtFrameCnt(30)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfTxMgmtFrameCnt;
    
        /*
         * NewwirelessIfTxCtrlFrameCnt(31)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfTxCtrlFrameCnt;
    
        /*
         * NewwirelessIfTxDataFrameCnt(32)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfTxDataFrameCnt;
    
        /*
         * NewwirelessIfTxAuthenFrameCnt(33)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfTxAuthenFrameCnt;
    
        /*
         * NewwirelessIfTxAssociateFrameCnt(34)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfTxAssociateFrameCnt;
    
        /*
         * NewwirelessIfSuccAssociatedNum(35)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   NewwirelessIfSuccAssociatedNum;
   u_long   NewwirelessIfallApUserOnlineTime;
    
   u_long   NewwirelessIfApUserLostConnectionCnt;
   u_long   NewwirelessIfApAuthReqCnt;
   u_long   NewwirelessIfApAuthSucCnt;
   u_long   NewwirelessIfApAuthFailCnt;
} dot11NewWtpWirelessIfstatsTable_data;


/*
 * TODO:120:r: |-> Review dot11NewWtpWirelessIfstatsTable mib index.
 * This structure is used to represent the index for dot11NewWtpWirelessIfstatsTable.
 */
typedef struct dot11NewWtpWirelessIfstatsTable_mib_index_s {

        /*
         * wtpMacAddr(1)/Dot11BaseWtpIdTC/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
        /** 128 - 2(other indexes) - oid length(14) = 111 */
   char   wtpMacAddr[111];
   size_t      wtpMacAddr_len;
   long   NewWtpID;

        /*
         * wtpWirelessIfIndex(1)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   wtpWirelessIfIndex;

        /*
         * NewWirelessWlanID(1)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   NewWirelessWlanID;


} dot11NewWtpWirelessIfstatsTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review dot11NewWtpWirelessIfstatsTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     *
     * BE VERY CAREFUL TO TAKE INTO ACCOUNT THE MAXIMUM
     * POSSIBLE LENGHT FOR EVERY VARIABLE LENGTH INDEX!
     * Guessing 128 - col/entry(2)  - oid len(12)
*/
#define MAX_dot11NewWtpWirelessIfstatsTable_IDX_LEN     114


/* *********************************************************************
 * TODO:130:o: |-> Review dot11NewWtpWirelessIfstatsTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * dot11NewWtpWirelessIfstatsTable_rowreq_ctx pointer.
 */
typedef struct dot11NewWtpWirelessIfstatsTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_dot11NewWtpWirelessIfstatsTable_IDX_LEN];
    
    dot11NewWtpWirelessIfstatsTable_mib_index        tbl_idx;
    
    dot11NewWtpWirelessIfstatsTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * implementor's context pointer (provided during registration)
     */
    dot11NewWtpWirelessIfstatsTable_registration_ptr dot11NewWtpWirelessIfstatsTable_reg;

    /*
     * TODO:131:o: |   |-> Add useful data to dot11NewWtpWirelessIfstatsTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *dot11NewWtpWirelessIfstatsTable_data_list;

} dot11NewWtpWirelessIfstatsTable_rowreq_ctx;

typedef struct dot11NewWtpWirelessIfstatsTable_ref_rowreq_ctx_s {
    dot11NewWtpWirelessIfstatsTable_rowreq_ctx *rowreq_ctx;
} dot11NewWtpWirelessIfstatsTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int dot11NewWtpWirelessIfstatsTable_pre_request(dot11NewWtpWirelessIfstatsTable_registration_ptr user_context);
    int dot11NewWtpWirelessIfstatsTable_post_request(dot11NewWtpWirelessIfstatsTable_registration_ptr user_context);


extern oid dot11NewWtpWirelessIfstatsTable_oid[];
extern int dot11NewWtpWirelessIfstatsTable_oid_size;


#include "dot11NewWtpWirelessIfstatsTable_interface.h"
#include "dot11NewWtpWirelessIfstatsTable_data_access.h"
#include "dot11NewWtpWirelessIfstatsTable_data_get.h"
#include "dot11NewWtpWirelessIfstatsTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* DOT11NEWWTPWIRELESSIFSTATSTABLE_H */
