/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-enums.m2c 12526 2005-07-15 22:41:16Z rstory $
 *
 * $Id:$
 */
#ifndef DOT11SSIDCONFIGTABLE_ENUMS_H
#define DOT11SSIDCONFIGTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table dot11SSIDConfigTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * NewSSIDEnabled (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWSSIDENABLED_ENUMS
#define NEWSSIDENABLED_ENUMS

#define NEWSSIDENABLED_NO  0 
#define NEWSSIDENABLED_YES  1 

#endif /* NEWSSIDENABLED_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * NewSSIDHidden (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWSSIDHIDDEN_ENUMS
#define NEWSSIDHIDDEN_ENUMS

#define NEWSSIDHIDDEN_NO  0 
#define NEWSSIDHIDDEN_YES  1 

#endif /* NEWSSIDHIDDEN_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * NewStaIsolate (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWSTAISOLATE_ENUMS
#define NEWSTAISOLATE_ENUMS

#define NEWSTAISOLATE_NO  0 
#define NEWSTAISOLATE_YES  1 

#endif /* NEWSTAISOLATE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * NewDot11Auth (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWDOT11AUTH_ENUMS
#define NEWDOT11AUTH_ENUMS

#define NEWDOT11AUTH_OPEN  1 
#define NEWDOT11AUTH_SHARED  2 

#endif /* NEWDOT11AUTH_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * Newsecurity (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWSECURITY_ENUMS
#define NEWSECURITY_ENUMS

#define NEWSECURITY_NONE  1 
#define NEWSECURITY_WPA  2 
#define NEWSECURITY_WPA2  3 
#define NEWSECURITY_WAPI  4 

#endif /* NEWSECURITY_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * NewAuthenMode (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWAUTHENMODE_ENUMS
#define NEWAUTHENMODE_ENUMS

#define NEWAUTHENMODE_NONE  1 
#define NEWAUTHENMODE_PSK  2 
#define NEWAUTHENMODE_RADIUS  3 
#define NEWAUTHENMODE_WPAI_CER  4 

#endif /* NEWAUTHENMODE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * NewSecurityCiphers (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWSECURITYCIPHERS_ENUMS
#define NEWSECURITYCIPHERS_ENUMS

#define NEWSECURITYCIPHERS_NONE  1 
#define NEWSECURITYCIPHERS_WEP40  2 
#define NEWSECURITYCIPHERS_WEP104  3 
#define NEWSECURITYCIPHERS_AES  4 
#define NEWSECURITYCIPHERS_TKIP  5 
#define NEWSECURITYCIPHERS_SMS4  6 

#endif /* NEWSECURITYCIPHERS_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * NewEncrInputType (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWENCRINPUTTYPE_ENUMS
#define NEWENCRINPUTTYPE_ENUMS

#define NEWENCRINPUTTYPE_NONE  0 
#define NEWENCRINPUTTYPE_ASCII  1 
#define NEWENCRINPUTTYPE_HEX  2 

#endif /* NEWENCRINPUTTYPE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * NewExtensibleAuth (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWEXTENSIBLEAUTH_ENUMS
#define NEWEXTENSIBLEAUTH_ENUMS

#define NEWEXTENSIBLEAUTH_DISABLE  0 
#define NEWEXTENSIBLEAUTH_ENABLE  1 

#endif /* NEWEXTENSIBLEAUTH_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * SSIDRowStatus (RowStatus / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef ROWSTATUS_ENUMS
#define ROWSTATUS_ENUMS

#define ROWSTATUS_ACTIVE  1 
#define ROWSTATUS_NOTINSERVICE  2 
#define ROWSTATUS_NOTREADY  3 
#define ROWSTATUS_CREATEANDGO  4 
#define ROWSTATUS_CREATEANDWAIT  5 
#define ROWSTATUS_DESTROY  6 

#endif /* ROWSTATUS_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * NewWapiCertificationType (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef NEWWAPICERTIFICATIONTYPE_ENUMS
#define NEWWAPICERTIFICATIONTYPE_ENUMS

#define NEWWAPICERTIFICATIONTYPE_X509  1 
#define NEWWAPICERTIFICATIONTYPE_GBW  2 

#endif /* NEWWAPICERTIFICATIONTYPE_ENUMS */




#ifdef __cplusplus
}
#endif

#endif /* DOT11SSIDCONFIGTABLE_ENUMS_H */
