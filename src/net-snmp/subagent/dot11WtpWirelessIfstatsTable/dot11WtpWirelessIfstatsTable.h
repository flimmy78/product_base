/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.32.2.3 $ of : mfd-top.m2c,v $
 *
 * $Id:$
 */
#ifndef DOT11WTPWIRELESSIFSTATSTABLE_H
#define DOT11WTPWIRELESSIFSTATSTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @defgroup misc misc: Miscelaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_require(DOT11-WTP-MIB/dot11WtpWirelessIfstatsTable/dot11WtpWirelessIfstatsTable_interface);
config_require(DOT11-WTP-MIB/dot11WtpWirelessIfstatsTable/dot11WtpWirelessIfstatsTable_data_access);
config_require(DOT11-WTP-MIB/dot11WtpWirelessIfstatsTable/dot11WtpWirelessIfstatsTable_data_get);
config_require(DOT11-WTP-MIB/dot11WtpWirelessIfstatsTable/dot11WtpWirelessIfstatsTable_data_set);
    /* *INDENT-ON*  */

/* OID and column number definitions for  */
#include "dot11WtpWirelessIfstatsTable_oids.h"

/* enum definions */
#include "dot11WtpWirelessIfstatsTable_enums.h"
#include "ws_dbus_list_interface.h"

/* *********************************************************************
 * function declarations
 */
void init_dot11WtpWirelessIfstatsTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table dot11WtpWirelessIfstatsTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * dot11WtpWirelessIfstatsTable is subid 5 of wtpInterface.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.33050.6.1.1.3.5, length: 12
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review dot11WtpWirelessIfstatsTable registration context.
     */
typedef netsnmp_data_list * dot11WtpWirelessIfstatsTable_registration_ptr;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review dot11WtpWirelessIfstatsTable data context structure.
 * This structure is used to represent the data for dot11WtpWirelessIfstatsTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * dot11WtpWirelessIfstatsTable.
 */
typedef struct dot11WtpWirelessIfstatsTable_data_s {
    
        /*
         * wirelessIfAvgRxSignalStrength(1)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   wirelessIfAvgRxSignalStrength;
    
        /*
         * wirelessIfHighestRxSignalStrength(2)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   wirelessIfHighestRxSignalStrength;
    
        /*
         * wirelessIfLowestRxSignalStrength(3)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   wirelessIfLowestRxSignalStrength;
    
        /*
         * wirelessIfUpdownTimes(4)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfUpdownTimes;
    
        /*
         * wirelessIfChStatsNumStations(5)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsNumStations;
    
        /*
         * wirelessIfTxSignalPkts(6)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxSignalPkts;
    
        /*
         * wirelessIfRxSignalPkts(7)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxSignalPkts;
    
        /*
         * wirelessIfTxDataPkts(8)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxDataPkts;
    
        /*
         * wirelessIfRxDataPkts(9)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxDataPkts;
    
        /*
         * wirelessIfRxDataOctets(10)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wirelessIfRxDataOctets;
    
        /*
         * wirelessIfTxDataOctets(11)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wirelessIfTxDataOctets;
    
        /*
         * wirelessIfChStatsDwlinkTotRetryPkts(12)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsDwlinkTotRetryPkts;
    
        /*
         * wirelessIfChStatsUplinkUniFrameCnt(13)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsUplinkUniFrameCnt;
    
        /*
         * wirelessIfChStatsDwlinkUniFrameCnt(14)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsDwlinkUniFrameCnt;
    
        /*
         * wirelessIfUpChStatsFrameNonUniFrameCnt(15)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfUpChStatsFrameNonUniFrameCnt;
    
        /*
         * wirelessIfDownChStatsFrameNonUniFrameCnt(16)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfDownChStatsFrameNonUniFrameCnt;
    
        /*
         * wirelessIfChStatsPhyErrPkts(17)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsPhyErrPkts;
    
        /*
         * wirelessIfChStatsMacFcsErrPkts(18)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsMacFcsErrPkts;
    
        /*
         * wirelessIfChStatsMacMicErrPkts(19)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsMacMicErrPkts;
    
        /*
         * wirelessIfChStatsMacDecryptErrPkts(20)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsMacDecryptErrPkts;
    
        /*
         * wirelessIfChStatsFrameErrorCnt(21)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsFrameErrorCnt;
    
        /*
         * wirelessIfChStatsFrameRetryCnt(22)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfChStatsFrameRetryCnt;
    
        /*
         * wirelessIfApChStatsFrameFragRate(23)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfApChStatsFrameFragRate;
    
        /*
         * wirelessIfRxMgmtFrameCnt(24)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxMgmtFrameCnt;
    
        /*
         * wirelessIfRxCtrlFrameCnt(25)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxCtrlFrameCnt;
    
        /*
         * wirelessIfRxDataFrameCnt(26)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxDataFrameCnt;
    
        /*
         * wirelessIfRxAuthenFrameCnt(27)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxAuthenFrameCnt;
    
        /*
         * wirelessIfRxAssociateFrameCnt(28)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxAssociateFrameCnt;
    
        /*
         * wirelessIfTxMgmtFrameCnt(29)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxMgmtFrameCnt;
    
        /*
         * wirelessIfTxCtrlFrameCnt(30)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxCtrlFrameCnt;
    
        /*
         * wirelessIfTxDataFrameCnt(31)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxDataFrameCnt;
    
        /*
         * wirelessIfTxAuthenFrameCnt(32)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxAuthenFrameCnt;
    
        /*
         * wirelessIfTxAssociateFrameCnt(33)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxAssociateFrameCnt;
    
        /*
         * wirelessIfTxManagePkts(34)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxManagePkts;
    
        /*
         * wirelessIfRxManagePkts(35)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxManagePkts;
    
        /*
         * wirelessIfTxManageOctets(36)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wirelessIfTxManageOctets;
    
        /*
         * wirelessIfRxManageOctets(37)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wirelessIfRxManageOctets;
    
        /*
         * wirelessIfTxTotalPkts(38)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxTotalPkts;
    
        /*
         * wirelessIfRxTotalPkts(39)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxTotalPkts;
    
        /*
         * wirelessIfTxTotalOctets(40)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wirelessIfTxTotalOctets;
    
        /*
         * wirelessIfRxTotalOctets(41)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   unsigned long long   wirelessIfRxTotalOctets;
    
        /*
         * wirelessIfRxDropPkts(42)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxDropPkts;
    
        /*
         * wirelessIfTxDropPkts(43)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxDropPkts;
    
        /*
         * wirelessIfRxErrPkts(44)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfRxErrPkts;
    
        /*
         * wirelessIfTxErrPkts(45)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   wirelessIfTxErrPkts;
    
        /*
         * wtpNeighborSSIDList(46)/DisplayString/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
   char   wtpNeighborSSIDList[255];
size_t      wtpNeighborSSIDList_len; /* # of char elements, not bytes */
    
} dot11WtpWirelessIfstatsTable_data;


/*
 * TODO:120:r: |-> Review dot11WtpWirelessIfstatsTable mib index.
 * This structure is used to represent the index for dot11WtpWirelessIfstatsTable.
 */
typedef struct dot11WtpWirelessIfstatsTable_mib_index_s {

        /*
         * wtpMacAddr(1)/Dot11BaseWtpIdTC/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
        /** 128 - 1(other indexes) - oid length(14) = 112 */
   char   wtpMacAddr[112];
   size_t      wtpMacAddr_len;

        /*
         * wtpWirelessIfIndex(1)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   wtpWirelessIfIndex;


} dot11WtpWirelessIfstatsTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review dot11WtpWirelessIfstatsTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     *
     * BE VERY CAREFUL TO TAKE INTO ACCOUNT THE MAXIMUM
     * POSSIBLE LENGHT FOR EVERY VARIABLE LENGTH INDEX!
     * Guessing 128 - col/entry(2)  - oid len(12)
*/
#define MAX_dot11WtpWirelessIfstatsTable_IDX_LEN     114


/* *********************************************************************
 * TODO:130:o: |-> Review dot11WtpWirelessIfstatsTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * dot11WtpWirelessIfstatsTable_rowreq_ctx pointer.
 */
typedef struct dot11WtpWirelessIfstatsTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_dot11WtpWirelessIfstatsTable_IDX_LEN];
    
    dot11WtpWirelessIfstatsTable_mib_index        tbl_idx;
    
    dot11WtpWirelessIfstatsTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * implementor's context pointer (provided during registration)
     */
    dot11WtpWirelessIfstatsTable_registration_ptr dot11WtpWirelessIfstatsTable_reg;

    /*
     * TODO:131:o: |   |-> Add useful data to dot11WtpWirelessIfstatsTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *dot11WtpWirelessIfstatsTable_data_list;

} dot11WtpWirelessIfstatsTable_rowreq_ctx;

typedef struct dot11WtpWirelessIfstatsTable_ref_rowreq_ctx_s {
    dot11WtpWirelessIfstatsTable_rowreq_ctx *rowreq_ctx;
} dot11WtpWirelessIfstatsTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int dot11WtpWirelessIfstatsTable_pre_request(dot11WtpWirelessIfstatsTable_registration_ptr user_context);
    int dot11WtpWirelessIfstatsTable_post_request(dot11WtpWirelessIfstatsTable_registration_ptr user_context);


extern oid dot11WtpWirelessIfstatsTable_oid[];
extern int dot11WtpWirelessIfstatsTable_oid_size;


#include "dot11WtpWirelessIfstatsTable_interface.h"
#include "dot11WtpWirelessIfstatsTable_data_access.h"
#include "dot11WtpWirelessIfstatsTable_data_get.h"
#include "dot11WtpWirelessIfstatsTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* DOT11WTPWIRELESSIFSTATSTABLE_H */
